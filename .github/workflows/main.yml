# name: Demo laravel app

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: 8.3
 
#       - name: Install app
#         run: composer install
 
#       - name: Deploy using ssh
#         uses: appleboy/ssh-action@v1.1.0
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           # key: ${{ secrets.SSH_PRIVATE_KEY }}
#           password: ${{ secrets.SSH_PASSWORD }}
#           script: |
#             cd ${{ secrets.APP_PATH }}
#             ./build.sh

name: Deploy Laravel App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Install Composer dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Setup Node.js and build assets
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          npm ci
          npm run build

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ secrets.SERVER_PATH }} || mkdir -p ${{ secrets.SERVER_PATH }} && cd ${{ secrets.SERVER_PATH }}

            # first-time setup: clone repo
            if [ ! -d ".git" ]; then
              git clone https://github.com/${{ github.repository }} . 
            else
              git reset --hard
              git pull origin main
            fi

            composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # restart PHP (adjust for your OS)
            sudo systemctl restart php8.1-fpm || true
