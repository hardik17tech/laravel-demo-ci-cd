# # # name: Demo laravel app

# # # on:
# # #   push:
# # #     branches: [ main ]

# # # jobs:
# # #   build:
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout code
# # #         uses: actions/checkout@v4

# # #       - name: Setup PHP
# # #         uses: shivammathur/setup-php@v2
# # #         with:
# # #           php-version: 8.3
 
# # #       - name: Install app
# # #         run: composer install
 
# # #       - name: Deploy using ssh
# # #         uses: appleboy/ssh-action@v1.1.0
# # #         with:
# # #           host: ${{ secrets.SSH_HOST }}
# # #           username: ${{ secrets.SSH_USERNAME }}
# # #           # key: ${{ secrets.SSH_PRIVATE_KEY }}
# # #           password: ${{ secrets.SSH_PASSWORD }}
# # #           script: |
# # #             cd ${{ secrets.APP_PATH }}
# # #             ./build.sh






# name: Demo Laravel App

# on:
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: 8.2
#           extensions: mbstring, bcmath, intl, pdo, tokenizer, xml

#       - name: Install Composer dependencies
#         run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

#       - name: Build Frontend
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: |
#           npm install
#           npm run build

#       - name: Deploy to Server
#         uses: appleboy/ssh-action@v1.2.0
#         with:
#           host: 10.10.20.41
#           username: dev
#           password: Dev@123
#           port: 22
#           script: |
#             cd /var/www/html/laravel-demo
#             git pull origin main || true
#             composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
#             php artisan migrate --force
#             php artisan config:cache
#             php artisan route:cache
#             php artisan view:cache
#             sudo systemctl restart php8.3-fpm || true


name: Demo Laravel App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, intl, pdo, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Build Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          npm install
          npm run build

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to Server (SSH on port 25025)
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" \
            ssh -p 25025 -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} bash -lc '
              echo "logged in sucess"

              # Ensure target directory exists
              sudo mkdir -p /var/www/html/laravel-demo
              sudo chown -R $USER:$USER /var/www/html/laravel-demo

              cd /var/www/html/laravel-demo || { echo "❌ Directory missing"; exit 1; }
              
              if [ -d ".git" ]; then
                echo "🔄 Updating existing repo..."
                git reset --hard
                git pull origin main
              else
                echo "📥 Cloning repo for the first time..."
                git clone https://github.com/hardik17tech/laravel-demo-ci-cd.git .
              fi
              
              composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader && \
              php artisan migrate --force && \
              php artisan config:cache && \
              php artisan route:cache && \
              php artisan view:cache && \
              sudo systemctl restart php8.3-fpm || true
            '


      # - name: Deploy to Server
        # run: |
        #   sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd /var/www/html/laravel-demo && git pull && php artisan migrate --force"


# name: Demo Laravel App

# on:
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: 8.2
#           extensions: mbstring, bcmath, intl, pdo, tokenizer, xml

#       - name: Install Composer dependencies
#         run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

#       - name: Build Frontend
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: |
#           npm install
#           npm run build

#       # Setup SSH private key
#       - name: Setup SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
#           chmod 600 ~/.ssh/id_ed25519
#           ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

#       # Deploy to server
#       - name: Deploy to Server
#         run: |
#           ssh -i ~/.ssh/id_ed25519 -o BatchMode=yes \
#             ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
#               cd /var/www/html/laravel-demo

#               git pull origin main || true

#               composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

#               if [ -f artisan ]; then
#                 php artisan migrate --force || true
#                 php artisan config:cache || true
#                 php artisan route:cache || true
#                 php artisan view:cache || true
#               fi

#               sudo systemctl restart php8.3-fpm || true
#           EOF
